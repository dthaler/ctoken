# Makefile -- UNIX-style make for ctoken using OpenSSL crypto
#
# Copyright (c) 2019-2020, Laurence Lundblade. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
# See BSD-3-Clause license in README.md
#

# ---- comment ----
# This is for OpenSSL Crypto. Adjust CRYPTO_INC and CRYPTO_LIB for the location of
# the openssl libraries on your build machine.


# ---- QCBOR location ----
# This is for direct reference to QCBOR that is not installed in
# /usr/local or some system location. The path names may need to be
# adjusted for your location of QCBOR.
#QCBOR_INC= -I ../../QCBOR/master/inc
#QCBOR_LIB=../../QCBOR/master/libqcbor.a

# This is for reference to QCBOR that has been installed in
# /usr/local/ or in some system location.
QCBOR_INC= -I /usr/local/include
QCBOR_LIB= -l qcbor


# ---- t_cose location ----
# Adjust this to the location of t_cose in your build environment
T_COSE_INC= -I ../../t_cose/SpiffyDecode/inc
T_COSE_LIB=../../t_cose/SpiffyDecode/libt_cose.a

# ---- crypto configuration -----
# Set up for OpenSSL. This may have to be adjusted for your build environment.
CRYPTO_INC=-I /usr/local/include 
#../../openssl/openssl-1.1.1b/include/openssl -I ../../openssl/openssl-1.1.1b/include
CRYPTO_LIB=-lcrypto
#../../openssl/openssl-1.1.1b/libcrypto.a

# ---- compiler configuration -----
C_OPTS=-Os -Wall -pedantic-errors -Wextra -Wshadow -Wparentheses -xc -std=c99


# ---- T_COSE Config and test options ----
TEST_CONFIG_OPTS=
TEST_OBJ=test/eat_test.o test/cwt_test.o test/psaia_test.o test/run_tests.o


# ---- the main body that is invariant ----
INC=-I inc -I test  -I src
ALL_INC=$(CRYPTO_INC) $(QCBOR_INC) $(T_COSE_INC) $(INC) 
CFLAGS=$(ALL_INC) $(C_OPTS) $(TEST_CONFIG_OPTS) $(CRYPTO_CONFIG_OPTS)

SRC_OBJ=src/ctoken_encode.o src/ctoken_decode.o \
        src/ctoken_psaia_encode.o src/ctoken_psaia_decode.o


all:	libctoken.a ctoken_test eat_example_ossl


libctoken.a: $(SRC_OBJ) $(CRYPTO_OBJ)
	ar -r $@ $^


ctoken_test: main.o $(TEST_OBJ) libctoken.a
	cc -o $@ $^ $(QCBOR_LIB) $(T_COSE_LIB) $(CRYPTO_LIB) 


eat_example_ossl:	examples/eat_example_ossl.o libctoken.a
	cc -dead_strip -o $@ $^ $(QCBOR_LIB) $(CRYPTO_LIB) $(T_COSE_LIB)

clean:
	rm -f $(SRC_OBJ) $(TEST_OBJ) $(CRYPTO_OBJ) eat_example_ossl t_cose_test libctoken.a main.o examples/eat_example_ossl.o


# ---- public headers -----
PUBLIC_INTERFACE=inc/ctoken_encode.h inc/ctoken_decode.h \
                  inc/ctoken_cwt_labels.h 

# ---- source dependecies -----
src/ctoken_encode.o:	inc/ctoken_encode.h
src/ctoken_decode.o:	inc/ctoken_decode.h 
src/ctoken_psaia_encode.o:	inc/ctoken_psaia_encode.h inc/ctoken_psaia_labels.h  inc/ctoken_cwt_labels.h
src/ctoken_psaia_decode.o:	inc/ctoken_psaia_decode.h inc/ctoken_psaia_labels.h  inc/ctoken_cwt_labels.h


# ---- test dependencies -----
test/cwt_test.o:	test/cwt_test.h $(PUBLIC_INTERFACE)
test/eat_test.o:	test/eat_test.h $(PUBLIC_INTERFACE)

# ---- example dependencies ----
eat_example_ossl.o:	$(PUBLIC_INTERFACE)
